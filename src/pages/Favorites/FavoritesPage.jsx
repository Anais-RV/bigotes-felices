import { useState, useEffect } from "react";
import { readAllCats } from "../../service/catService";
// ðŸ’¡ PISTA 1: Â¿No deberÃ­as importar el hook useFavorites que creÃ³ DavidLapi?
// import { useFavorites } from "../../context/FavoritesContext";

// ðŸ’¡ PISTA 2: TambiÃ©n necesitas importar Link de react-router-dom
// import { Link } from "react-router-dom";

const FavoritesPage = () => {
  
  // ðŸ’¡ PISTA 3: Â¿Realmente necesitas este estado local? 
  // El contexto de favoritos ya tiene la lista de favoritos
  const [favCards, setFavCards] = useState([]);

  // ðŸ’¡ PISTA 4: Esta funciÃ³n carga TODOS los gatos, no solo los favoritos
  // Â¿No deberÃ­as usar el contexto para obtener solo los favoritos?
  const getAllCatsFromService = async () => {
    const DATA = await readAllCats();
    setFavCards(DATA);
  };

  useEffect(() => { getAllCatsFromService(); }, []);

  // ðŸ’¡ PISTA 5: DeberÃ­as obtener { favorites } del contexto usando useFavorites()

  return (
    <>
      {/* HEADER */}
      <main>
        <section className="main__section--fav-cards">
          {/* ðŸ’¡ PISTA 6: Â¿QuÃ© pasa si favorites.length === 0? 
              DeberÃ­as mostrar "No tienes favoritos" segÃºn los criterios de aceptaciÃ³n */}
          {favCards.map((favCard) => (
            <div key={favCard.id}></div> // Card Component inside here
          ))}
        </section>
        <div className="div__btn--styling">
          <button className="btn__btn--state-adopt-all">Adoptar</button>
          <Link to="/">
            <button className="btn__btn--state-home-link">Home</button>
          </Link>
        </div>
      </main>
    </>
  )
}

export default FavoritesPage;